#!/usr/bin/env python
#
# ======================================================================
#
#                           Brad T. Aagaard
#                        U.S. Geological Survey
#
# {LicenseText}
#
# ======================================================================
#
## @file tests/libtests/data/testsimpledbline.odb
## @brief Python data generator for tests of C++ SimpleDB using
## TestSimpleDBLine.

def query_data():
  """Factory method for facility query_data."""
  return LineData()

from SimpleDBQueryData import SimpleDBQueryData

# LineData class
class LineData(SimpleDBQueryData):
  """Python data generator for tests of C++ SimpleDBQuery using
  TestSimpleDBLine."""

  def initialize(self):
    """Initialize."""

    self._names = [ "One", "Two" ]
    self._tdata = [ {'t': 0.0, 'one': 0.1, 'two': 1.1},
                    {'t': 1.0, 'one': 0.3, 'two': 3.3},
                    {'t': 1.5, 'one': 0.2, 'two': 2.2},
                    {'t': 2.0, 'one': 0.1, 'two': 1.1},
                    {'t': 5.0, 'one': -0.4, 'two': -4.4} ]
    self._topology = "spatial::SimpleDB::LINE"

    self._qtdata = [ {'t': 1.0, 'ni': 1, 'wts': [{'i': 1, 'w': 1.0}] },
                     {'t': 4.0, 'ni': 4, 'wts': [{'i': 3, 'w': 1.0/3.0},
                                                 {'i': 4, 'w': 2.0/3.0} ] },
                     {'t': 1.2, 'ni': 1, 'wts': [{'i': 1, 'w': 0.6},
                                                 {'i': 2, 'w': 0.4}]} ]
    self._numLocs = len(self._tdata)
    self._numVals = len(self._names)
    self._numQueries = len(self._qtdata)

    self._compute()
    return

  def _compute(self):
    """Compute locations of points and values."""
    o = [3.4, 9.5, 8.7]
    a = [2.3, 0.4, 9.8]
    self._data = []
    for loc in self._tdata:
      t = loc['t']
      x = o[0] + a[0]*t
      y = o[1] + a[1]*t
      z = o[2] + a[2]*t
      self._data += [x, y, z, loc['one'], loc['two']]
    
    self._qldata = []
    self._qndata = []
    for qloc in self._qtdata:
      t = qloc['t']
      x = o[0] + a[0]*t
      y = o[1] + a[1]*t
      z = o[2] + a[2]*t
      v1 = 0
      v2 = 0
      for wt in qloc['wts']:
        v1 += self._tdata[wt['i']]['one']*wt['w']
        v2 += self._tdata[wt['i']]['two']*wt['w']
      self._qldata += [x, y, z, v1, v2]
      v1 = self._tdata[qloc['ni']]['one']
      v2 = self._tdata[qloc['ni']]['two']
      self._qndata += [x, y, z, v1, v2]    
    return

  def __init__(self):
    """Constructor."""
    SimpleDBQueryData.__init__(self, name="linedata")
    return

# version
__id__ = "$Id: testsimpledbline.odb,v 1.1.1.1 2005/03/17 22:18:34 baagaard Exp $"

# End of file 
